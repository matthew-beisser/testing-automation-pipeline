@startuml container_diagram_phase_2_data_collection
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Context.puml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml

' Elements
Enterprise_Boundary(System, "[Container] Phase 1: Testing Automation Pipeline (Data Collection)") {
    Enterprise_Boundary(CloudSystem, "External Network") {    
        Container_Ext(Jira, "Issue Tracking", "Jira")
        
        Enterprise_Boundary(FacilitySystem, "Test Facility") {
            Person(Tester1, "Test Engineer 1")

            Container_Ext(Lidar, "Lidar", "Iris, Halo")

            Container_Boundary(TestWorkStation, "Test Workstation") {
                Container_Ext(Valkyrie, "Labview", "Valkyrie", "GUI for lidar testing.")
                Container_Ext(DFTLib, "DFT", "doip, spans", "Sends doip commands to lidar. Initiates test tracing.")
            }

            Container_Ext(FileStorage, "File Storage", "nfs", "Storage location for unprocessed test data.")

            System_Boundary(TestPipelineSystem, "Testing Pipeline") {
                System_Boundary(Docker, "Docker (Linux)")  {
                    System(TestPipeline, "Pipeline Software", "Process incoming test data, perform target extractation, and store results.")
                    Container(Jaegar, "Distributed Tracing", "Jaegar Collector", "Capture sensor test responses and metadata.")
                    ContainerDb(Database, "Database", "Cassandra / Elasticsearch", "Storage backed for Jaegar.")
                }
            }
        }
    }
}

Lay_R(Jira, FileStorage)

' Relationships
Rel(Tester1, Valkyrie, "trigger  lidar  test", "gui")
BiRel(Jira, TestWorkStation, "work  item", "rest  api")
Rel(TestWorkStation, FileStorage, "write  test  files", ".pcap")
BiRel(TestPipeline, FileStorage, "retrieve  unprocessed  files")
Rel(TestPipeline, Database, "")
BiRel(DFTLib, Lidar, "sensor  commands / responses", "doip")
Rel(DFTLib, Jaegar, "spans")
Rel(Jaegar, Database, "spans")

Rel(Lidar, TestWorkStation, "point  cloud", "udp")

@enduml

