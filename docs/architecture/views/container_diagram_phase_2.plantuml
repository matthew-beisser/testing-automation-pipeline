@startuml container_diagram_phase_2
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Context.puml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml

' Elements
Enterprise_Boundary(System, "[Container] Phase 1: Testing Automation Pipeline") {
    Enterprise_Boundary(CloudSystem, "External Network") {    
        Container_Ext(Jira, "Issue Tracking", "Jira")
        Container_Ext(Jama, "Requirements Management", "Jama")   
        
        Enterprise_Boundary(FacilitySystem, "Test Facility") {            
            Container_Boundary(TestArea, "Test Area") {
                Person(Tester1, "Test Engineer 1")

                Container_Boundary(TestWorkstation, "Test Workstation") {
                    Container_Ext(Valkyrie, "Labview", "Valkyrie", "GUI for lidar testing")
                    Container_Ext(DFTLib, "DFT", "sensor command", "")
                }

                Container_Ext(Lidar, "Lidar", "Iris, Halo", "")
            }
            Person(Tester2, "Test Engineer 2")

            Container_Ext(FileStorage, "File Storage", "nfs", "Storage location for unprocessed test data")

            System_Boundary(Pipeline, "Testing Pipeline") {
                Container_Boundary(Docker, "Docker (Ubuntu 24.04 LTS)")  {
                    Container(FileMonitor, "File Monitor", "python", "Process incoming test file results")
                    ContainerDb(Database, "Database", "SQLite", "Local database")
                    Container(DataAnalysis, "Data Analysis", "python", "Perform target extraction and analysis")
                    Container(DataCompilation, "Data Compilation", "python", "Create output based on analysis results\n e.g. .csv, images, html, reports")
                    Container(Jaegar, "Distributed Tracing", "Jaegar", "Capture sensor test responses and metadata")
                }
            }
        }
    }
}

Lay_U(Jira, Jama)

' Relationships
Rel(Tester1, Valkyrie, "trigger  lidar  test", "gui")
BiRel_Neighbor(Jira, Valkyrie, "work  item", "rest  api")
Rel(TestWorkstation, FileStorage, "write  .pcap  files")
BiRel(DFTLib, Lidar, "sensor  commands / responses", "doip")
'Rel(Valkyrie, DFTLib, "sensor  commands")

BiRel(FileMonitor, FileStorage, "retrieve  unprocessed  files")
Rel(DataAnalysis, Database, "store  analysis  results", "sql")
BiRel(DataAnalysis, Database, "request / retrieve data", "sql")
BiRel(DataCompilation, Database, "request / retrieve  analysis  results", "sql")
Rel_Neighbor(FileMonitor, Database, "store  test  data", "sql")
Rel(DFTLib, Jaegar, "")

Rel(Lidar, TestWorkstation, "point  cloud", "udp")
Rel(Tester2, DataCompilation, "data\n  request")
Rel(DataCompilation, Tester2, "data  summary,\n reports,\n images,\n notifications")
Rel(DataCompilation, Jama, "test  evidence", "rest  api")

@enduml

