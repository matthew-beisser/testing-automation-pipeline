@startuml context_test_automation_system
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Context.puml

'LAYOUT_WITH_LEGEND()

' Elements
Enterprise_Boundary(cloud, "The Cloud") {
    'Enterprise_Boundary(automation, "Hosted") {
        System_Ext(Jama, "Requirements Management", "Jama")
        System_Ext(Jira, "Issue Tracking", "Jira")
        System(MasterDatabase, "Master Database", "Database containing test data from all workstations")
    '}
    
    Enterprise_Boundary(facility, "Test Facility") {
        Person(Tester, "Tester")
        System(TestWorkStation, "Workstation", "Computer running lidar testing software\n e.g. Valkyrie")
        System_Ext(Lidar, "Lidar", "e.g. Iris")

        System_Ext(FileStorage, "File Storage", "Storage location for unprocessed test data")

        System_Boundary(Pipeline, "Testing Pipeline") {
            System(DataMonitor, "Data Monitor", "Handles processing of unprocessed test data")
            
            System_Boundary(DataBaseSystem, "Database Management", "Database syncing") {
                System(DataBaseManager, "Database Manager", "Syncs data between local and master databases")
                System(LocalDataBase, "Database", "Local workstation database")
            }

            System(DataValidator, "Data Validation", "Perform target extraction analysis")
            System(ReportGenerator, "Report Generator", "Create reports based on analysis results, e.g. csv or images")
        }
    }
}

Lay_R(Jama, Jira)

'Rel_Neighbor(TestWorkStation, FileStorage, "write .pcap, .csv, .txt files")
Rel_Neighbor(TestWorkStation, FileStorage, "write .pcap, .csv, .txt files")

' Relationships
Rel(Tester, TestWorkStation, "trigger lidar test")
BiRel(Jira, TestWorkStation, "work item ticket number and metadata")
Rel(DataMonitor, FileStorage, "check for data")
BiRel(DataValidator, LocalDataBase, "store analysis results")
Rel(DataValidator, LocalDataBase, "retrieve data")
Rel(DataMonitor, LocalDataBase, "stores data")
Rel(FileStorage, DataMonitor, "unprocessed data")
Rel(TestWorkStation, Lidar, "telnet commands,\ndoip request")

Rel(Lidar, TestWorkStation, "point cloud data,\ntelnet response,\ndoip response")

Rel(DataMonitor, MasterDatabase, "sync data")

@enduml
